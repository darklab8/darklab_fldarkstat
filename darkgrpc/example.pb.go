// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.12.4
// source: example.proto

package darkgrpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_example_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{0}
}

type GetBasesReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bases         []*Base                `protobuf:"bytes,1,rep,name=bases,proto3" json:"bases,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBasesReply) Reset() {
	*x = GetBasesReply{}
	mi := &file_example_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBasesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasesReply) ProtoMessage() {}

func (x *GetBasesReply) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasesReply.ProtoReflect.Descriptor instead.
func (*GetBasesReply) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{1}
}

func (x *GetBasesReply) GetBases() []*Base {
	if x != nil {
		return x.Bases
	}
	return nil
}

type Pos struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float64                `protobuf:"fixed64,1,opt,name=X,proto3" json:"X,omitempty"`
	Y             float64                `protobuf:"fixed64,2,opt,name=Y,proto3" json:"Y,omitempty"`
	Z             float64                `protobuf:"fixed64,3,opt,name=Z,proto3" json:"Z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pos) Reset() {
	*x = Pos{}
	mi := &file_example_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pos) ProtoMessage() {}

func (x *Pos) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pos.ProtoReflect.Descriptor instead.
func (*Pos) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{2}
}

func (x *Pos) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Pos) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Pos) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

// The response message containing the greetings
type Base struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Name               string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                              //   Name               string          `json:"name"`       // Infocard Name
	Archetypes         []string               `protobuf:"bytes,2,rep,name=Archetypes,proto3" json:"Archetypes,omitempty"`                  //   Archetypes         []string        `json:"archetypes"` // Base Archetypes
	Nickname           string                 `protobuf:"bytes,3,opt,name=Nickname,proto3" json:"Nickname,omitempty"`                      //   Nickname           cfg.BaseUniNick `json:"nickname"`
	NicknameHash       int64                  `protobuf:"varint,4,opt,name=NicknameHash,proto3" json:"NicknameHash,omitempty"`             //   NicknameHash       flhash.HashCode `json:"nickname_hash" format:"int64"` // Flhash of nickname
	FactionName        string                 `protobuf:"bytes,5,opt,name=FactionName,proto3" json:"FactionName,omitempty"`                //   FactionName        string          `json:"faction_nickname"`
	System             string                 `protobuf:"bytes,6,opt,name=System,proto3" json:"System,omitempty"`                          //   System             string          `json:"system_name"`
	SystemNickname     string                 `protobuf:"bytes,7,opt,name=SystemNickname,proto3" json:"SystemNickname,omitempty"`          //   SystemNickname     string          `json:"system_nickname"`
	SystemNicknameHash int64                  `protobuf:"varint,8,opt,name=SystemNicknameHash,proto3" json:"SystemNicknameHash,omitempty"` //   SystemNicknameHash flhash.HashCode `json:"system_nickname_hash" format:"int64"`
	Region             string                 `protobuf:"bytes,9,opt,name=Region,proto3" json:"Region,omitempty"`                          //   Region             string          `json:"region_name"`
	StridName          int32                  `protobuf:"varint,10,opt,name=StridName,proto3" json:"StridName,omitempty"`                  //   StridName          int             `json:"strid_name"`
	InfocardID         int32                  `protobuf:"varint,11,opt,name=InfocardID,proto3" json:"InfocardID,omitempty"`                //   InfocardID         int             `json:"infocard_id"`
	// InfocardKey        InfocardKey
	File          string `protobuf:"bytes,12,opt,name=File,proto3" json:"File,omitempty"`                                            //   File               utils_types.FilePath `json:"file"`
	BGCSBaseRunBy string `protobuf:"bytes,13,opt,name=BGCS_base_run_by,json=BGCSBaseRunBy,proto3" json:"BGCS_base_run_by,omitempty"` //   BGCS_base_run_by   string
	// MarketGoodsPerNick map[CommodityKey]*MarketGood `json:"-" swaggerignore:"true"`
	Pos                    *Pos   `protobuf:"bytes,14,opt,name=Pos,proto3" json:"Pos,omitempty"`                                        //   Pos                cfg.Vector                   `json:"pos"`
	SectorCoord            string `protobuf:"bytes,15,opt,name=SectorCoord,proto3" json:"SectorCoord,omitempty"`                        //   SectorCoord        string                       `json:"sector_coord"`
	IsTransportUnreachable bool   `protobuf:"varint,16,opt,name=IsTransportUnreachable,proto3" json:"IsTransportUnreachable,omitempty"` //   IsTransportUnreachable bool `json:"is_transport_unreachable"` // Check if base is NOT reachable from manhattan by Transport through Graph method (at Discovery base has to have Transport dockable spheres)
	Reachable              bool   `protobuf:"varint,18,opt,name=Reachable,proto3" json:"Reachable,omitempty"`                           //   Reachable bool `json:"is_reachhable"` // is base IS Rechable by frighter from Manhattan
	IsPob                  bool   `protobuf:"varint,19,opt,name=IsPob,proto3" json:"IsPob,omitempty"`                                   //   IsPob     bool
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Base) Reset() {
	*x = Base{}
	mi := &file_example_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base) ProtoMessage() {}

func (x *Base) ProtoReflect() protoreflect.Message {
	mi := &file_example_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base.ProtoReflect.Descriptor instead.
func (*Base) Descriptor() ([]byte, []int) {
	return file_example_proto_rawDescGZIP(), []int{3}
}

func (x *Base) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Base) GetArchetypes() []string {
	if x != nil {
		return x.Archetypes
	}
	return nil
}

func (x *Base) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Base) GetNicknameHash() int64 {
	if x != nil {
		return x.NicknameHash
	}
	return 0
}

func (x *Base) GetFactionName() string {
	if x != nil {
		return x.FactionName
	}
	return ""
}

func (x *Base) GetSystem() string {
	if x != nil {
		return x.System
	}
	return ""
}

func (x *Base) GetSystemNickname() string {
	if x != nil {
		return x.SystemNickname
	}
	return ""
}

func (x *Base) GetSystemNicknameHash() int64 {
	if x != nil {
		return x.SystemNicknameHash
	}
	return 0
}

func (x *Base) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Base) GetStridName() int32 {
	if x != nil {
		return x.StridName
	}
	return 0
}

func (x *Base) GetInfocardID() int32 {
	if x != nil {
		return x.InfocardID
	}
	return 0
}

func (x *Base) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Base) GetBGCSBaseRunBy() string {
	if x != nil {
		return x.BGCSBaseRunBy
	}
	return ""
}

func (x *Base) GetPos() *Pos {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *Base) GetSectorCoord() string {
	if x != nil {
		return x.SectorCoord
	}
	return ""
}

func (x *Base) GetIsTransportUnreachable() bool {
	if x != nil {
		return x.IsTransportUnreachable
	}
	return false
}

func (x *Base) GetReachable() bool {
	if x != nil {
		return x.Reachable
	}
	return false
}

func (x *Base) GetIsPob() bool {
	if x != nil {
		return x.IsPob
	}
	return false
}

var File_example_proto protoreflect.FileDescriptor

var file_example_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x64, 0x61, 0x72, 0x6b, 0x67, 0x72, 0x70, 0x63, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x61, 0x72, 0x6b, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x05, 0x62, 0x61, 0x73, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x03, 0x50, 0x6f, 0x73,
	0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x58, 0x12, 0x0c,
	0x0a, 0x01, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x59, 0x12, 0x0c, 0x0a, 0x01,
	0x5a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x5a, 0x22, 0xce, 0x04, 0x0a, 0x04, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x72, 0x63, 0x68, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x72, 0x63,
	0x68, 0x65, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x72, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x74, 0x72, 0x69, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6f, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x49, 0x6e, 0x66, 0x6f, 0x63, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x10, 0x42, 0x47, 0x43, 0x53, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x42,
	0x47, 0x43, 0x53, 0x42, 0x61, 0x73, 0x65, 0x52, 0x75, 0x6e, 0x42, 0x79, 0x12, 0x1f, 0x0a, 0x03,
	0x50, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x61, 0x72, 0x6b,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x6f, 0x73, 0x52, 0x03, 0x50, 0x6f, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x12,
	0x36, 0x0a, 0x16, 0x49, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x49, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x63, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x52, 0x65, 0x61, 0x63,
	0x68, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x50, 0x6f, 0x62, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x50, 0x6f, 0x62, 0x32, 0x42, 0x0a, 0x08, 0x44,
	0x61, 0x72, 0x6b, 0x47, 0x52, 0x70, 0x63, 0x12, 0x36, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x64, 0x61, 0x72, 0x6b, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x64, 0x61, 0x72, 0x6b, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x61,
	0x72, 0x6b, 0x6c, 0x61, 0x62, 0x38, 0x2f, 0x66, 0x6c, 0x2d, 0x64, 0x61, 0x72, 0x6b, 0x73, 0x74,
	0x61, 0x74, 0x2f, 0x64, 0x61, 0x72, 0x6b, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
})

var (
	file_example_proto_rawDescOnce sync.Once
	file_example_proto_rawDescData []byte
)

func file_example_proto_rawDescGZIP() []byte {
	file_example_proto_rawDescOnce.Do(func() {
		file_example_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_example_proto_rawDesc), len(file_example_proto_rawDesc)))
	})
	return file_example_proto_rawDescData
}

var file_example_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_example_proto_goTypes = []any{
	(*Empty)(nil),         // 0: darkgrpc.Empty
	(*GetBasesReply)(nil), // 1: darkgrpc.GetBasesReply
	(*Pos)(nil),           // 2: darkgrpc.Pos
	(*Base)(nil),          // 3: darkgrpc.Base
}
var file_example_proto_depIdxs = []int32{
	3, // 0: darkgrpc.GetBasesReply.bases:type_name -> darkgrpc.Base
	2, // 1: darkgrpc.Base.Pos:type_name -> darkgrpc.Pos
	0, // 2: darkgrpc.DarkGRpc.GetBases:input_type -> darkgrpc.Empty
	1, // 3: darkgrpc.DarkGRpc.GetBases:output_type -> darkgrpc.GetBasesReply
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_example_proto_init() }
func file_example_proto_init() {
	if File_example_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_example_proto_rawDesc), len(file_example_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_example_proto_goTypes,
		DependencyIndexes: file_example_proto_depIdxs,
		MessageInfos:      file_example_proto_msgTypes,
	}.Build()
	File_example_proto = out.File
	file_example_proto_goTypes = nil
	file_example_proto_depIdxs = nil
}
