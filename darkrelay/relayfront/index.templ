package relayfront

import (
	"github.com/darklab8/fl-darkstat/darkstat/front/types"
	"github.com/darklab8/fl-darkstat/darkstat/front/tab"
	"github.com/darklab8/fl-darkstat/darkstat/front/urls"
	"github.com/darklab8/fl-darkstat/darkstat/front/frmt"
	"github.com/darklab8/go-utils/utils/utils_types"
)

templ Index(theme types.Theme, shared *types.SharedData) {
	@tab.Html5(theme, shared) {
		<div id="tabs" hx-get={ types.GetCtx(ctx).SiteRoot + urls.PoBs.ToString() } hx-trigger="load" hx-target="#tabs" hx-swap="innerHTML"></div>
	}
}


templ TabMenu(url utils_types.FilePath, mode tab.ShowEmpty, shared *types.SharedData) {
	@tab.TabStyle()
	@tab.Heading(shared) {
		<div class="tab-list" role="tablist">
			if mode == false {
				
				@tab.Button(tab.NewButtn(ctx,[]string{"PoBs"}, urls.Ammo, url))
				<button preload="mouseover" hx-trigger="mousedown" style="width:60px; border-radius: 20px;" hx-get={ types.GetCtx(ctx).SiteRoot + tab.AllItemsUrl(url).ToString() } role="tab" aria-selected="false" aria-controls="tab-content">
					@frmt.MultiLinestring([]string{"Show", "All"})
				</button>
			} else {
				
				@tab.Button(tab.NewButtn(ctx,[]string{"PoBs"}, tab.AllItemsUrl(urls.Ammo), url))
				<button preload="mouseover" hx-trigger="mousedown" style="width:60px; border-radius: 20px;" hx-get={ types.GetCtx(ctx).SiteRoot + tab.NotAllItemsUrl(url).ToString() } role="tab" aria-selected="false" aria-controls="tab-content">
					@frmt.MultiLinestring([]string{"Don't", "Show All"})
				</button>
			}
			<button style="width:60px; border-radius: 20px;" onClick={ tab.GoToUrl(types.GetCtx(ctx).SiteRoot, types.GetCtx(ctx).Themes) } type="button">
				@frmt.MultiLinestring([]string{"Color", "Scheme"})
			</button>
			
		</div>
	}
	<hr/>
}